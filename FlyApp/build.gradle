apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.greenrobot.greendao'

greendao {
    targetGenDir 'src/main/java'
    daoPackage 'com.ew.autofly.db.dao'
    schemaVersion 11  //数据库版本号
}

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "cn.tazup.tower"
        minSdkVersion rootProject.minSdkVersion
        //noinspection ExpiredTargetSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 292
        versionName "v1.10.2.2"
        multiDexEnabled true
        //resConfigs "zh"
        vectorDrawables.useSupportLibrary = true
        ndk {
            // On x86 devices that run Android API 23 or above, if the application is targeted with API 23 or
            // above, FFmpeg lib might lead to runtime crashes or warnings.
            abiFilters 'armeabi-v7a'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        signingConfigs {
            release {
                keyAlias 'tower'
                keyPassword '0DD185CDDEDF95'
                storeFile file('/Users/apple/Documents/keystore/tower.keystore')//这里是你的jks文件路径
                storePassword '0DD185CDDEDF95'
            }
        }
    }


    signingConfigs {
        buildTypes {
            debug {
                debuggable true
                resValue "string", "app_version", defaultConfig.versionName
                resValue "string", "dji_key", "fc2ad254d1ac28938a59b89d"
                manifestPlaceholders = [ENVIRONMENT: "dev"]
                buildConfigField "boolean", "LOG_DEBUG", "true"
                buildConfigField "boolean", "ARCGIS_TEXT_ENABLE", "true"//arcgis文字用textSymbol显示
                //AppConstant下的配置
                buildConfigField "String", "APP_STORAGE_PATH", '"autofly"'
            }
            release {
                resValue "string", "app_version", defaultConfig.versionName
                resValue "string", "dji_key", "fc2ad254d1ac28938a59b89d"
                //AppConstant下的配置
                buildConfigField "String", "APP_STORAGE_PATH", '"autofly"'
                buildConfigField "boolean", "LOG_DEBUG", "false"// 不显示Log
                buildConfigField "boolean", "ARCGIS_TEXT_ENABLE", "true"
                minifyEnabled true//混淆
                zipAlignEnabled true//Zipalign优化
                //shrinkResources true// 移除无用的resource文件
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
                signingConfig signingConfigs.release//指定签名文件
                debuggable false
                jniDebuggable false
            }
        }
    }

//    buildTypes {
//        debug {
//            buildConfigField "boolean", "LOG_DEBUG", "true"
//            buildConfigField "boolean", "ARCGIS_TEXT_ENABLE", "true"//arcgis文字用textSymbol显示
//            debuggable true
//            minifyEnabled false
//        }
//        release {
//            buildConfigField "boolean", "LOG_DEBUG", "false"// 不显示Log
//            buildConfigField "boolean", "ARCGIS_TEXT_ENABLE", "true"
//            minifyEnabled true//混淆
//            zipAlignEnabled true//Zipalign优化
//            //shrinkResources true// 移除无用的resource文件
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
////            signingConfig signingConfigs.release//指定签名文件
//            debuggable true
//            jniDebuggable false
//        }
//    }

    lintOptions {
        abortOnError false//忽略lint报错
    }

    dexOptions {
        javaMaxHeapSize "3g"//增加Java堆内存大小
//        incremental true//开启incremental dexing，优化编译效率
        preDexLibraries = false//不要对Lib做preDexing
    }

    useLibrary 'org.apache.http.legacy'

    packagingOptions {

        exclude 'proguard-project.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/proguard/okhttp3.pro'
        exclude 'META-INF/rxjava.properties'

        doNotStrip "*/*/libdjivideo.so"
        doNotStrip "*/*/libSDKRelativeJNI.so"
        doNotStrip "*/*/libFlyForbid.so"
        doNotStrip "*/*/libduml_vision_bokeh.so"
        doNotStrip "*/*/libyuv2.so"
        doNotStrip "*/*/libGroudStation.so"
        doNotStrip "*/*/libFRCorkscrew.so"
        doNotStrip "*/*/libUpgradeVerify.so"
        doNotStrip "*/*/libFR.so"
        doNotStrip "*/*/libDJIFlySafeCore.so"
        doNotStrip "*/*/libdjifs_jni.so"
        doNotStrip "*/*/libsfjni.so"
        doNotStrip "*/*/libDJICommonJNI.so"
        doNotStrip "*/*/libDJICSDKCommon.so"
        doNotStrip "*/*/libDJIUpgradeCore.so"
        doNotStrip "*/*/libDJIUpgradeJNI.so"
        doNotStrip "*/*/libDJIWaypointV2Core.so"
        doNotStrip "*/*/libAMapSDK_MAP_v6_9_2.so"
        doNotStrip "*/*/libDJIMOP.so"
        doNotStrip "*/*/libDJISDKLOGJNI.so"

        pickFirst 'lib/*/libstlport_shared.so'
        pickFirst 'lib/*/libRoadLineRebuildAPI.so'
        pickFirst 'lib/*/libGNaviUtils.so'
        pickFirst 'lib/*/libGNaviMapex.so'
        pickFirst 'lib/*/libGNaviData.so'
        pickFirst 'lib/*/libGNaviMap.so'
        pickFirst 'lib/*/libGNaviSearch.so'
        pickFirst 'lib/*/libDJIFlySafeCore.so'
        pickFirst 'lib/*/libdjifs_jni.so'
        pickFirst 'lib/*/libsfjni.so'
        exclude 'META-INF/proguard/okhttp3.pro'
        exclude 'META-INF/rxjava.properties'
        exclude 'assets/location_map_gps_locked.png'
        exclude 'assets/location_map_gps_3d.png'
    }

    sourceSets {
        /* main {
             manifest.srcFile 'AndroidManifest.xml'
             java.srcDirs = ['src']
             resources.srcDirs = ['src']
             aidl.srcDirs = ['src']
             renderscript.srcDirs = ['src']
             res.srcDirs = ['res']
             assets.srcDirs = ['assets']
             jniLibs.srcDirs = ['libs']
         }
 */
        //instrumentTest.setRoot('tests')

        main.jniLibs.srcDirs = ['libs']

        main.res.srcDirs += 'src/main/res-mode/wirepatrol'
        main.res.srcDirs += 'src/main/res-mode/finepatrol'
        main.res.srcDirs += 'src/main/res-mode/pddetection'

        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    repositories {
        flatDir {
            dirs 'libs' //项目中有.aar文件需要加上
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = outputFile.name
                def today = new Date().format('yyyyMMdd')
                fileName = fileName.replace(".apk", "-" + defaultConfig.versionName + "-${today}.apk")
                outputFileName = fileName;
            }
        }
    }

    /*android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = outputFile.name
                def today = new Date().format('yyyyMMdd')
                File dir = file("E:\\版本发布\\" + "${today}")
                fileName = fileName.replace(".apk", "-" + defaultConfig.versionName + "-${today}.apk")
                output.outputFile = new File(dir, fileName)
            }
        }
    }*/
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

//    /**
//     * dji导入的包（start）
//     */
//    implementation('com.dji:dji-uxsdk:4.11.1', {
//        // Uncomment the following line if your app does not need Anti Distortion for
//        // Mavic 2 Pro and Mavic 2 Zoom. It will greatly reducing the size of the APK:
//        // exclude module: 'library-anti-distortion'
//    })
//    compileOnly('com.dji:dji-sdk-provided:4.11.1')
    implementation ('com.dji:dji-uxsdk:4.14', {
        exclude module: 'dji-sdk'

        /**
         * Uncomment the following line to exclude amap from the app.
         * Note that Google Play Store does not allow APKs that include this library.
         */
        // exclude group: 'com.amap.api'
    })
    implementation ('com.dji:dji-sdk:4.15.1', {
        /**
         * Uncomment the "library-anti-distortion" if your app does not need Anti Distortion for Mavic 2 Pro and Mavic 2 Zoom.
         * Uncomment the "fly-safe-database" if you need database for release, or we will download it when DJISDKManager.getInstance().registerApp
         * is called.
         * Both will greatly reduce the size of the APK.
         */
        exclude module: 'library-anti-distortion'
//        exclude module: 'fly-safe-database'
    })
    compileOnly ('com.dji:dji-sdk-provided:4.15.1')

//    implementation 'com.dji:library-networkrtk-helper:1.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'com.github.Jay-Goo:RangeSeekBar:v3.0.0'
    /**
     * dji导入的包（end）
     */
    implementation 'androidx.annotation:annotation:1.2.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.core:core:1.6.0'

//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.1'
    //releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'org.greenrobot:greendao-generator:3.2.2'
    implementation 'com.github.chrisbanes:PhotoView:2.1.3'

    implementation 'com.google.code.gson:gson:2.8.6'

    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.1'
    implementation 'com.tencent.bugly:nativecrashreport:3.3.1'

    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:5.4.0'
    implementation 'org.java-websocket:Java-WebSocket:1.3.6'
    implementation 'com.baoyz.pullrefreshlayout:library:1.2.0'
    //手势库
    implementation 'com.github.Almeros:android-gesture-detectors:v1.0.1'
    implementation 'com.bulong.rudeness:rudeness:0.1.4'
    //图表库
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'
    implementation 'com.github.michael-rapp:android-material-dialog:4.3.4'

    //阿里路由
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'

    //多线程下载库
    implementation 'com.lzy.net:okgo:3.0.4'
    //compile 'com.lzy.net:okrx2:2.0.2'
    implementation 'com.lzy.net:okserver:2.0.5'

    implementation('com.hwangjr.rxbus:rxbus:3.0.0') {
        exclude group: 'com.jakewharton.timber', module: 'timber'
    }

    //侧滑菜单
    implementation 'com.github.mcxtzhang:SwipeDelMenuLayout:V1.3.0'

    implementation 'com.github.tencentyun:tls-sig-api:1.2'

    //大图查看
    implementation 'com.github.SherlockGougou:BigImageViewPager:v3_4.0.2'


    implementation project(':control')
    implementation project(':lib_map')
    implementation project(':lib_design')
    implementation project(':lib_video')

}